
ATmega16_Clock_I2C_RTC_LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000964  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000038  00800060  00000964  000009d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00000a10  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a6c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a0  00000000  00000000  00000aa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d12  00000000  00000000  00000b48  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000071e  00000000  00000000  0000185a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000741  00000000  00000000  00001f78  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000016c  00000000  00000000  000026bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000468  00000000  00000000  00002828  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000050d  00000000  00000000  00002c90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  0000319d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e6       	ldi	r30, 0x64	; 100
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 39       	cpi	r26, 0x98	; 152
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 6d 01 	call	0x2da	; 0x2da <main>
  7a:	0c 94 b0 04 	jmp	0x960	; 0x960 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <lcd_cmd>:
			I2C_Stop();										/* If not then generate stop condition */
			continue;										/* continue with start loop again */
		}
		break;												/* If yes then break loop */
	}
}
  82:	98 2f       	mov	r25, r24
  84:	90 7f       	andi	r25, 0xF0	; 240
  86:	92 bb       	out	0x12, r25	; 18
  88:	92 b3       	in	r25, 0x12	; 18
  8a:	9e 7f       	andi	r25, 0xFE	; 254
  8c:	92 bb       	out	0x12, r25	; 18
  8e:	92 b3       	in	r25, 0x12	; 18
  90:	9d 7f       	andi	r25, 0xFD	; 253
  92:	92 bb       	out	0x12, r25	; 18
  94:	92 b3       	in	r25, 0x12	; 18
  96:	94 60       	ori	r25, 0x04	; 4
  98:	92 bb       	out	0x12, r25	; 18
  9a:	e9 ef       	ldi	r30, 0xF9	; 249
  9c:	f0 e0       	ldi	r31, 0x00	; 0
  9e:	31 97       	sbiw	r30, 0x01	; 1
  a0:	f1 f7       	brne	.-4      	; 0x9e <lcd_cmd+0x1c>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <lcd_cmd+0x22>
  a4:	00 00       	nop
  a6:	92 b3       	in	r25, 0x12	; 18
  a8:	9b 7f       	andi	r25, 0xFB	; 251
  aa:	92 bb       	out	0x12, r25	; 18
  ac:	f0 e1       	ldi	r31, 0x10	; 16
  ae:	8f 9f       	mul	r24, r31
  b0:	c0 01       	movw	r24, r0
  b2:	11 24       	eor	r1, r1
  b4:	82 bb       	out	0x12, r24	; 18
  b6:	82 b3       	in	r24, 0x12	; 18
  b8:	8e 7f       	andi	r24, 0xFE	; 254
  ba:	82 bb       	out	0x12, r24	; 18
  bc:	82 b3       	in	r24, 0x12	; 18
  be:	8d 7f       	andi	r24, 0xFD	; 253
  c0:	82 bb       	out	0x12, r24	; 18
  c2:	82 b3       	in	r24, 0x12	; 18
  c4:	84 60       	ori	r24, 0x04	; 4
  c6:	82 bb       	out	0x12, r24	; 18
  c8:	89 ef       	ldi	r24, 0xF9	; 249
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	01 97       	sbiw	r24, 0x01	; 1
  ce:	f1 f7       	brne	.-4      	; 0xcc <lcd_cmd+0x4a>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <lcd_cmd+0x50>
  d2:	00 00       	nop
  d4:	82 b3       	in	r24, 0x12	; 18
  d6:	8b 7f       	andi	r24, 0xFB	; 251
  d8:	82 bb       	out	0x12, r24	; 18
  da:	08 95       	ret

000000dc <lcd_data>:
  dc:	98 2f       	mov	r25, r24
  de:	90 7f       	andi	r25, 0xF0	; 240
  e0:	92 bb       	out	0x12, r25	; 18
  e2:	92 b3       	in	r25, 0x12	; 18
  e4:	91 60       	ori	r25, 0x01	; 1
  e6:	92 bb       	out	0x12, r25	; 18
  e8:	92 b3       	in	r25, 0x12	; 18
  ea:	9d 7f       	andi	r25, 0xFD	; 253
  ec:	92 bb       	out	0x12, r25	; 18
  ee:	92 b3       	in	r25, 0x12	; 18
  f0:	94 60       	ori	r25, 0x04	; 4
  f2:	92 bb       	out	0x12, r25	; 18
  f4:	e9 ef       	ldi	r30, 0xF9	; 249
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	31 97       	sbiw	r30, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <lcd_data+0x1c>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <lcd_data+0x22>
  fe:	00 00       	nop
 100:	92 b3       	in	r25, 0x12	; 18
 102:	9b 7f       	andi	r25, 0xFB	; 251
 104:	92 bb       	out	0x12, r25	; 18
 106:	f0 e1       	ldi	r31, 0x10	; 16
 108:	8f 9f       	mul	r24, r31
 10a:	c0 01       	movw	r24, r0
 10c:	11 24       	eor	r1, r1
 10e:	82 bb       	out	0x12, r24	; 18
 110:	82 b3       	in	r24, 0x12	; 18
 112:	81 60       	ori	r24, 0x01	; 1
 114:	82 bb       	out	0x12, r24	; 18
 116:	82 b3       	in	r24, 0x12	; 18
 118:	8d 7f       	andi	r24, 0xFD	; 253
 11a:	82 bb       	out	0x12, r24	; 18
 11c:	82 b3       	in	r24, 0x12	; 18
 11e:	84 60       	ori	r24, 0x04	; 4
 120:	82 bb       	out	0x12, r24	; 18
 122:	89 ef       	ldi	r24, 0xF9	; 249
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	01 97       	sbiw	r24, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <lcd_data+0x4a>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <lcd_data+0x50>
 12c:	00 00       	nop
 12e:	82 b3       	in	r24, 0x12	; 18
 130:	8b 7f       	andi	r24, 0xFB	; 251
 132:	82 bb       	out	0x12, r24	; 18
 134:	08 95       	ret

00000136 <lcd_string>:
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	ec 01       	movw	r28, r24
 13c:	03 c0       	rjmp	.+6      	; 0x144 <lcd_string+0xe>
 13e:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_data>
 142:	21 96       	adiw	r28, 0x01	; 1
 144:	88 81       	ld	r24, Y
 146:	81 11       	cpse	r24, r1
 148:	fa cf       	rjmp	.-12     	; 0x13e <lcd_string+0x8>
 14a:	df 91       	pop	r29
 14c:	cf 91       	pop	r28
 14e:	08 95       	ret

00000150 <lcd_print_xy>:
 150:	cf 93       	push	r28
 152:	df 93       	push	r29
 154:	ea 01       	movw	r28, r20
 156:	81 11       	cpse	r24, r1
 158:	08 c0       	rjmp	.+16     	; 0x16a <lcd_print_xy+0x1a>
 15a:	60 31       	cpi	r22, 0x10	; 16
 15c:	30 f4       	brcc	.+12     	; 0x16a <lcd_print_xy+0x1a>
 15e:	86 2f       	mov	r24, r22
 160:	8f 70       	andi	r24, 0x0F	; 15
 162:	80 68       	ori	r24, 0x80	; 128
 164:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
 168:	09 c0       	rjmp	.+18     	; 0x17c <lcd_print_xy+0x2c>
 16a:	81 30       	cpi	r24, 0x01	; 1
 16c:	39 f4       	brne	.+14     	; 0x17c <lcd_print_xy+0x2c>
 16e:	60 31       	cpi	r22, 0x10	; 16
 170:	28 f4       	brcc	.+10     	; 0x17c <lcd_print_xy+0x2c>
 172:	86 2f       	mov	r24, r22
 174:	8f 70       	andi	r24, 0x0F	; 15
 176:	80 6c       	ori	r24, 0xC0	; 192
 178:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
 17c:	ce 01       	movw	r24, r28
 17e:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_string>
 182:	df 91       	pop	r29
 184:	cf 91       	pop	r28
 186:	08 95       	ret

00000188 <lcd_init>:
 188:	80 ef       	ldi	r24, 0xF0	; 240
 18a:	81 bb       	out	0x11, r24	; 17
 18c:	81 b3       	in	r24, 0x11	; 17
 18e:	87 60       	ori	r24, 0x07	; 7
 190:	81 bb       	out	0x11, r24	; 17
 192:	83 e3       	ldi	r24, 0x33	; 51
 194:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
 198:	82 e3       	ldi	r24, 0x32	; 50
 19a:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
 19e:	88 e2       	ldi	r24, 0x28	; 40
 1a0:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
 1a4:	86 e0       	ldi	r24, 0x06	; 6
 1a6:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
 1aa:	8c e0       	ldi	r24, 0x0C	; 12
 1ac:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
 1b6:	08 95       	ret

000001b8 <I2C_Init>:
 1b8:	11 b8       	out	0x01, r1	; 1
 1ba:	80 e2       	ldi	r24, 0x20	; 32
 1bc:	80 b9       	out	0x00, r24	; 0
 1be:	08 95       	ret

000001c0 <I2C_Start>:
 1c0:	84 ea       	ldi	r24, 0xA4	; 164
 1c2:	86 bf       	out	0x36, r24	; 54
 1c4:	06 b6       	in	r0, 0x36	; 54
 1c6:	07 fe       	sbrs	r0, 7
 1c8:	fd cf       	rjmp	.-6      	; 0x1c4 <I2C_Start+0x4>
 1ca:	08 95       	ret

000001cc <I2C_Stop>:
 1cc:	84 e9       	ldi	r24, 0x94	; 148
 1ce:	86 bf       	out	0x36, r24	; 54
 1d0:	06 b6       	in	r0, 0x36	; 54
 1d2:	04 fc       	sbrc	r0, 4
 1d4:	fd cf       	rjmp	.-6      	; 0x1d0 <I2C_Stop+0x4>
 1d6:	08 95       	ret

000001d8 <I2C_Write>:

uint8_t I2C_Write(char data)								/* I2C write function */
{
	uint8_t status;											/* Declare variable */
	TWDR = data;											/* Copy data in TWI data register */
 1d8:	83 b9       	out	0x03, r24	; 3
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
 1da:	84 e8       	ldi	r24, 0x84	; 132
 1dc:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
 1de:	06 b6       	in	r0, 0x36	; 54
 1e0:	07 fe       	sbrs	r0, 7
 1e2:	fd cf       	rjmp	.-6      	; 0x1de <I2C_Write+0x6>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
 1e4:	81 b1       	in	r24, 0x01	; 1
 1e6:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
 1e8:	88 32       	cpi	r24, 0x28	; 40
 1ea:	21 f0       	breq	.+8      	; 0x1f4 <I2C_Write+0x1c>
	return 0;												/* If yes then return 0 to indicate ack received */
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
 1ec:	80 33       	cpi	r24, 0x30	; 48
 1ee:	21 f4       	brne	.+8      	; 0x1f8 <I2C_Write+0x20>
	return 1;												/* If yes then return 1 to indicate nack received */
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	08 95       	ret
	TWDR = data;											/* Copy data in TWI data register */
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
	return 0;												/* If yes then return 0 to indicate ack received */
 1f4:	80 e0       	ldi	r24, 0x00	; 0
 1f6:	08 95       	ret
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
	return 1;												/* If yes then return 1 to indicate nack received */
	else
	return 2;												/* Else return 2 to indicate data transmission failed */
 1f8:	82 e0       	ldi	r24, 0x02	; 2
}
 1fa:	08 95       	ret

000001fc <I2C_Read_Ack>:

char I2C_Read_Ack()											/* I2C read ack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT)|(1<<TWEA);					/* Enable TWI, generation of ack and clear interrupt flag */
 1fc:	84 ec       	ldi	r24, 0xC4	; 196
 1fe:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
 200:	06 b6       	in	r0, 0x36	; 54
 202:	07 fe       	sbrs	r0, 7
 204:	fd cf       	rjmp	.-6      	; 0x200 <__EEPROM_REGION_LENGTH__>
	return TWDR;											/* Return received data */
 206:	83 b1       	in	r24, 0x03	; 3
}
 208:	08 95       	ret

0000020a <I2C_Read_Nack>:

char I2C_Read_Nack()										/* I2C read nack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT);								/* Enable TWI and clear interrupt flag */
 20a:	84 e8       	ldi	r24, 0x84	; 132
 20c:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
 20e:	06 b6       	in	r0, 0x36	; 54
 210:	07 fe       	sbrs	r0, 7
 212:	fd cf       	rjmp	.-6      	; 0x20e <I2C_Read_Nack+0x4>
	return TWDR;											/* Return received data */
 214:	83 b1       	in	r24, 0x03	; 3
}
 216:	08 95       	ret

00000218 <rtc_init>:
void rtc_init(void);
void rtc_write_setTimeDate(rtc_t *);
void rtc_readTimeData(rtc_t *);

void rtc_init(){
	I2C_Init();
 218:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <I2C_Init>
	I2C_Start();
 21c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <I2C_Start>
	
	I2C_Write(DS3232_Device_Write_address);
 220:	80 ed       	ldi	r24, 0xD0	; 208
 222:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <I2C_Write>
	I2C_Write(DS3232_controlRegAddress);
 226:	87 e0       	ldi	r24, 0x07	; 7
 228:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <I2C_Write>
	
	I2C_Write(0x00);         // Write 0x00 to Control register to disable SQW-Out
 22c:	80 e0       	ldi	r24, 0x00	; 0
 22e:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <I2C_Write>

	I2C_Stop();
 232:	0e 94 e6 00 	call	0x1cc	; 0x1cc <I2C_Stop>
 236:	08 95       	ret

00000238 <rtc_write_setTimeDate>:
}


void rtc_write_setTimeDate(rtc_t *rtc){
 238:	cf 93       	push	r28
 23a:	df 93       	push	r29
 23c:	ec 01       	movw	r28, r24
	I2C_Start();
 23e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <I2C_Start>
	
	I2C_Write(DS3232_Device_Write_address); // connect to DS1307 by sending its ID on I2c Bus
 242:	80 ed       	ldi	r24, 0xD0	; 208
 244:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <I2C_Write>
	I2C_Write(DS3232_SecondRegAddress);  // Request sec RAM address at 00H
 248:	80 e0       	ldi	r24, 0x00	; 0
 24a:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <I2C_Write>
	
	I2C_Write(rtc->sec);
 24e:	88 81       	ld	r24, Y
 250:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <I2C_Write>
	I2C_Write(rtc->min);
 254:	89 81       	ldd	r24, Y+1	; 0x01
 256:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <I2C_Write>
	I2C_Write(rtc->hour);
 25a:	8a 81       	ldd	r24, Y+2	; 0x02
 25c:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <I2C_Write>
	I2C_Write(rtc->weekday);
 260:	8b 81       	ldd	r24, Y+3	; 0x03
 262:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <I2C_Write>
	I2C_Write(rtc->date);
 266:	8c 81       	ldd	r24, Y+4	; 0x04
 268:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <I2C_Write>
	I2C_Write(rtc->month);
 26c:	8d 81       	ldd	r24, Y+5	; 0x05
 26e:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <I2C_Write>
	I2C_Write(rtc->year);
 272:	8e 81       	ldd	r24, Y+6	; 0x06
 274:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <I2C_Write>
	
	I2C_Stop();
 278:	0e 94 e6 00 	call	0x1cc	; 0x1cc <I2C_Stop>
}
 27c:	df 91       	pop	r29
 27e:	cf 91       	pop	r28
 280:	08 95       	ret

00000282 <rtc_readTimeData>:
void rtc_readTimeData(rtc_t *rtc){
 282:	cf 93       	push	r28
 284:	df 93       	push	r29
 286:	ec 01       	movw	r28, r24
	I2C_Start();
 288:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <I2C_Start>
	
	I2C_Write(DS3232_Device_Write_address); // connect to DS1307 by sending its ID on I2c Bus
 28c:	80 ed       	ldi	r24, 0xD0	; 208
 28e:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <I2C_Write>
	I2C_Write(DS3232_SecondRegAddress);  // Request sec RAM address at 00H
 292:	80 e0       	ldi	r24, 0x00	; 0
 294:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <I2C_Write>
	
	I2C_Stop();
 298:	0e 94 e6 00 	call	0x1cc	; 0x1cc <I2C_Stop>
	
	I2C_Start();
 29c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <I2C_Start>
	I2C_Write(DS3232_Device_Read_address);
 2a0:	81 ed       	ldi	r24, 0xD1	; 209
 2a2:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <I2C_Write>
	
	rtc->sec=I2C_Read_Ack();
 2a6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <I2C_Read_Ack>
 2aa:	88 83       	st	Y, r24
	rtc->min=I2C_Read_Ack();
 2ac:	0e 94 fe 00 	call	0x1fc	; 0x1fc <I2C_Read_Ack>
 2b0:	89 83       	std	Y+1, r24	; 0x01
	rtc->hour=I2C_Read_Ack();
 2b2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <I2C_Read_Ack>
 2b6:	8a 83       	std	Y+2, r24	; 0x02
	rtc->weekday=I2C_Read_Ack();
 2b8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <I2C_Read_Ack>
 2bc:	8b 83       	std	Y+3, r24	; 0x03
	rtc->date=I2C_Read_Ack();
 2be:	0e 94 fe 00 	call	0x1fc	; 0x1fc <I2C_Read_Ack>
 2c2:	8c 83       	std	Y+4, r24	; 0x04
	rtc->month=I2C_Read_Ack();
 2c4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <I2C_Read_Ack>
 2c8:	8d 83       	std	Y+5, r24	; 0x05
	rtc->year=I2C_Read_Nack();
 2ca:	0e 94 05 01 	call	0x20a	; 0x20a <I2C_Read_Nack>
 2ce:	8e 83       	std	Y+6, r24	; 0x06
	
	I2C_Stop();
 2d0:	0e 94 e6 00 	call	0x1cc	; 0x1cc <I2C_Stop>
	
	
}
 2d4:	df 91       	pop	r29
 2d6:	cf 91       	pop	r28
 2d8:	08 95       	ret

000002da <main>:
#include "RTC_H_file.h"

#define F_CPU 8000000UL

int main(void)
{
 2da:	cf 93       	push	r28
 2dc:	df 93       	push	r29
 2de:	cd b7       	in	r28, 0x3d	; 61
 2e0:	de b7       	in	r29, 0x3e	; 62
 2e2:	6b 97       	sbiw	r28, 0x1b	; 27
 2e4:	0f b6       	in	r0, 0x3f	; 63
 2e6:	f8 94       	cli
 2e8:	de bf       	out	0x3e, r29	; 62
 2ea:	0f be       	out	0x3f, r0	; 63
 2ec:	cd bf       	out	0x3d, r28	; 61
	rtc_t rtc;
	
	uint8_t buffer[20];
	
	I2C_Init();			/* Initialize I2C */
 2ee:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <I2C_Init>
	lcd_init();			/* Initialize LCD16x2 */
 2f2:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_init>
	rtc_init();
 2f6:	0e 94 0c 01 	call	0x218	; 0x218 <rtc_init>
	
	rtc.hour = 0x10; //  10:40:20 am
 2fa:	80 e1       	ldi	r24, 0x10	; 16
 2fc:	8b 83       	std	Y+3, r24	; 0x03
	rtc.min =  0x40;
 2fe:	80 e4       	ldi	r24, 0x40	; 64
 300:	8a 83       	std	Y+2, r24	; 0x02
	rtc.sec =  0x00;
 302:	19 82       	std	Y+1, r1	; 0x01

	rtc.date = 0x01; //1st Jan 2016
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	8d 83       	std	Y+5, r24	; 0x05
	rtc.month = 0x01;
 308:	8e 83       	std	Y+6, r24	; 0x06
	rtc.year = 0x16;
 30a:	86 e1       	ldi	r24, 0x16	; 22
 30c:	8f 83       	std	Y+7, r24	; 0x07
	rtc.weekday = 5; // Friday: 5th day of week considering monday as first day.
 30e:	85 e0       	ldi	r24, 0x05	; 5
 310:	8c 83       	std	Y+4, r24	; 0x04
	
	rtc_write_setTimeDate(&rtc);
 312:	ce 01       	movw	r24, r28
 314:	01 96       	adiw	r24, 0x01	; 1
 316:	0e 94 1c 01 	call	0x238	; 0x238 <rtc_write_setTimeDate>
	

    while(1)
    {
		rtc_readTimeData(&rtc);
 31a:	ce 01       	movw	r24, r28
 31c:	01 96       	adiw	r24, 0x01	; 1
 31e:	0e 94 41 01 	call	0x282	; 0x282 <rtc_readTimeData>
		
		sprintf(buffer, "time:%2x:%2x:%2x  \nDate:%2x/%2x/%2x",(uint8_t)rtc.hour,(uint8_t)rtc.min,(uint8_t)rtc.sec);
 322:	29 81       	ldd	r18, Y+1	; 0x01
 324:	9a 81       	ldd	r25, Y+2	; 0x02
 326:	8b 81       	ldd	r24, Y+3	; 0x03
 328:	1f 92       	push	r1
 32a:	2f 93       	push	r18
 32c:	1f 92       	push	r1
 32e:	9f 93       	push	r25
 330:	1f 92       	push	r1
 332:	8f 93       	push	r24
 334:	80 e6       	ldi	r24, 0x60	; 96
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	9f 93       	push	r25
 33a:	8f 93       	push	r24
 33c:	8e 01       	movw	r16, r28
 33e:	08 5f       	subi	r16, 0xF8	; 248
 340:	1f 4f       	sbci	r17, 0xFF	; 255
 342:	1f 93       	push	r17
 344:	0f 93       	push	r16
 346:	0e 94 c6 01 	call	0x38c	; 0x38c <sprintf>
		lcd_print_xy(0,0,buffer);
 34a:	a8 01       	movw	r20, r16
 34c:	60 e0       	ldi	r22, 0x00	; 0
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	0e 94 a8 00 	call	0x150	; 0x150 <lcd_print_xy>
		
		sprintf(buffer, "Date:%02x-%02x-%02x",(uint8_t)rtc.date,(uint8_t)rtc.month,(uint16_t)rtc.year);
 354:	2f 81       	ldd	r18, Y+7	; 0x07
 356:	9e 81       	ldd	r25, Y+6	; 0x06
 358:	8d 81       	ldd	r24, Y+5	; 0x05
 35a:	1f 92       	push	r1
 35c:	2f 93       	push	r18
 35e:	1f 92       	push	r1
 360:	9f 93       	push	r25
 362:	1f 92       	push	r1
 364:	8f 93       	push	r24
 366:	84 e8       	ldi	r24, 0x84	; 132
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	9f 93       	push	r25
 36c:	8f 93       	push	r24
 36e:	1f 93       	push	r17
 370:	0f 93       	push	r16
 372:	0e 94 c6 01 	call	0x38c	; 0x38c <sprintf>
		lcd_print_xy(1,0,buffer);
 376:	a8 01       	movw	r20, r16
 378:	60 e0       	ldi	r22, 0x00	; 0
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	0e 94 a8 00 	call	0x150	; 0x150 <lcd_print_xy>
 380:	0f b6       	in	r0, 0x3f	; 63
 382:	f8 94       	cli
 384:	de bf       	out	0x3e, r29	; 62
 386:	0f be       	out	0x3f, r0	; 63
 388:	cd bf       	out	0x3d, r28	; 61
 38a:	c7 cf       	rjmp	.-114    	; 0x31a <main+0x40>

0000038c <sprintf>:
 38c:	ae e0       	ldi	r26, 0x0E	; 14
 38e:	b0 e0       	ldi	r27, 0x00	; 0
 390:	ec ec       	ldi	r30, 0xCC	; 204
 392:	f1 e0       	ldi	r31, 0x01	; 1
 394:	0c 94 87 04 	jmp	0x90e	; 0x90e <__prologue_saves__+0x1c>
 398:	0d 89       	ldd	r16, Y+21	; 0x15
 39a:	1e 89       	ldd	r17, Y+22	; 0x16
 39c:	86 e0       	ldi	r24, 0x06	; 6
 39e:	8c 83       	std	Y+4, r24	; 0x04
 3a0:	1a 83       	std	Y+2, r17	; 0x02
 3a2:	09 83       	std	Y+1, r16	; 0x01
 3a4:	8f ef       	ldi	r24, 0xFF	; 255
 3a6:	9f e7       	ldi	r25, 0x7F	; 127
 3a8:	9e 83       	std	Y+6, r25	; 0x06
 3aa:	8d 83       	std	Y+5, r24	; 0x05
 3ac:	ae 01       	movw	r20, r28
 3ae:	47 5e       	subi	r20, 0xE7	; 231
 3b0:	5f 4f       	sbci	r21, 0xFF	; 255
 3b2:	6f 89       	ldd	r22, Y+23	; 0x17
 3b4:	78 8d       	ldd	r23, Y+24	; 0x18
 3b6:	ce 01       	movw	r24, r28
 3b8:	01 96       	adiw	r24, 0x01	; 1
 3ba:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <vfprintf>
 3be:	ef 81       	ldd	r30, Y+7	; 0x07
 3c0:	f8 85       	ldd	r31, Y+8	; 0x08
 3c2:	e0 0f       	add	r30, r16
 3c4:	f1 1f       	adc	r31, r17
 3c6:	10 82       	st	Z, r1
 3c8:	2e 96       	adiw	r28, 0x0e	; 14
 3ca:	e4 e0       	ldi	r30, 0x04	; 4
 3cc:	0c 94 a3 04 	jmp	0x946	; 0x946 <__epilogue_restores__+0x1c>

000003d0 <vfprintf>:
 3d0:	ab e0       	ldi	r26, 0x0B	; 11
 3d2:	b0 e0       	ldi	r27, 0x00	; 0
 3d4:	ee ee       	ldi	r30, 0xEE	; 238
 3d6:	f1 e0       	ldi	r31, 0x01	; 1
 3d8:	0c 94 79 04 	jmp	0x8f2	; 0x8f2 <__prologue_saves__>
 3dc:	6c 01       	movw	r12, r24
 3de:	7b 01       	movw	r14, r22
 3e0:	8a 01       	movw	r16, r20
 3e2:	fc 01       	movw	r30, r24
 3e4:	17 82       	std	Z+7, r1	; 0x07
 3e6:	16 82       	std	Z+6, r1	; 0x06
 3e8:	83 81       	ldd	r24, Z+3	; 0x03
 3ea:	81 ff       	sbrs	r24, 1
 3ec:	cc c1       	rjmp	.+920    	; 0x786 <__stack+0x327>
 3ee:	ce 01       	movw	r24, r28
 3f0:	01 96       	adiw	r24, 0x01	; 1
 3f2:	3c 01       	movw	r6, r24
 3f4:	f6 01       	movw	r30, r12
 3f6:	93 81       	ldd	r25, Z+3	; 0x03
 3f8:	f7 01       	movw	r30, r14
 3fa:	93 fd       	sbrc	r25, 3
 3fc:	85 91       	lpm	r24, Z+
 3fe:	93 ff       	sbrs	r25, 3
 400:	81 91       	ld	r24, Z+
 402:	7f 01       	movw	r14, r30
 404:	88 23       	and	r24, r24
 406:	09 f4       	brne	.+2      	; 0x40a <__DATA_REGION_LENGTH__+0xa>
 408:	ba c1       	rjmp	.+884    	; 0x77e <__stack+0x31f>
 40a:	85 32       	cpi	r24, 0x25	; 37
 40c:	39 f4       	brne	.+14     	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
 40e:	93 fd       	sbrc	r25, 3
 410:	85 91       	lpm	r24, Z+
 412:	93 ff       	sbrs	r25, 3
 414:	81 91       	ld	r24, Z+
 416:	7f 01       	movw	r14, r30
 418:	85 32       	cpi	r24, 0x25	; 37
 41a:	29 f4       	brne	.+10     	; 0x426 <__DATA_REGION_LENGTH__+0x26>
 41c:	b6 01       	movw	r22, r12
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 424:	e7 cf       	rjmp	.-50     	; 0x3f4 <vfprintf+0x24>
 426:	91 2c       	mov	r9, r1
 428:	21 2c       	mov	r2, r1
 42a:	31 2c       	mov	r3, r1
 42c:	ff e1       	ldi	r31, 0x1F	; 31
 42e:	f3 15       	cp	r31, r3
 430:	d8 f0       	brcs	.+54     	; 0x468 <__stack+0x9>
 432:	8b 32       	cpi	r24, 0x2B	; 43
 434:	79 f0       	breq	.+30     	; 0x454 <__DATA_REGION_LENGTH__+0x54>
 436:	38 f4       	brcc	.+14     	; 0x446 <__DATA_REGION_LENGTH__+0x46>
 438:	80 32       	cpi	r24, 0x20	; 32
 43a:	79 f0       	breq	.+30     	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
 43c:	83 32       	cpi	r24, 0x23	; 35
 43e:	a1 f4       	brne	.+40     	; 0x468 <__stack+0x9>
 440:	23 2d       	mov	r18, r3
 442:	20 61       	ori	r18, 0x10	; 16
 444:	1d c0       	rjmp	.+58     	; 0x480 <__stack+0x21>
 446:	8d 32       	cpi	r24, 0x2D	; 45
 448:	61 f0       	breq	.+24     	; 0x462 <__stack+0x3>
 44a:	80 33       	cpi	r24, 0x30	; 48
 44c:	69 f4       	brne	.+26     	; 0x468 <__stack+0x9>
 44e:	23 2d       	mov	r18, r3
 450:	21 60       	ori	r18, 0x01	; 1
 452:	16 c0       	rjmp	.+44     	; 0x480 <__stack+0x21>
 454:	83 2d       	mov	r24, r3
 456:	82 60       	ori	r24, 0x02	; 2
 458:	38 2e       	mov	r3, r24
 45a:	e3 2d       	mov	r30, r3
 45c:	e4 60       	ori	r30, 0x04	; 4
 45e:	3e 2e       	mov	r3, r30
 460:	2a c0       	rjmp	.+84     	; 0x4b6 <__stack+0x57>
 462:	f3 2d       	mov	r31, r3
 464:	f8 60       	ori	r31, 0x08	; 8
 466:	1d c0       	rjmp	.+58     	; 0x4a2 <__stack+0x43>
 468:	37 fc       	sbrc	r3, 7
 46a:	2d c0       	rjmp	.+90     	; 0x4c6 <__stack+0x67>
 46c:	20 ed       	ldi	r18, 0xD0	; 208
 46e:	28 0f       	add	r18, r24
 470:	2a 30       	cpi	r18, 0x0A	; 10
 472:	40 f0       	brcs	.+16     	; 0x484 <__stack+0x25>
 474:	8e 32       	cpi	r24, 0x2E	; 46
 476:	b9 f4       	brne	.+46     	; 0x4a6 <__stack+0x47>
 478:	36 fc       	sbrc	r3, 6
 47a:	81 c1       	rjmp	.+770    	; 0x77e <__stack+0x31f>
 47c:	23 2d       	mov	r18, r3
 47e:	20 64       	ori	r18, 0x40	; 64
 480:	32 2e       	mov	r3, r18
 482:	19 c0       	rjmp	.+50     	; 0x4b6 <__stack+0x57>
 484:	36 fe       	sbrs	r3, 6
 486:	06 c0       	rjmp	.+12     	; 0x494 <__stack+0x35>
 488:	8a e0       	ldi	r24, 0x0A	; 10
 48a:	98 9e       	mul	r9, r24
 48c:	20 0d       	add	r18, r0
 48e:	11 24       	eor	r1, r1
 490:	92 2e       	mov	r9, r18
 492:	11 c0       	rjmp	.+34     	; 0x4b6 <__stack+0x57>
 494:	ea e0       	ldi	r30, 0x0A	; 10
 496:	2e 9e       	mul	r2, r30
 498:	20 0d       	add	r18, r0
 49a:	11 24       	eor	r1, r1
 49c:	22 2e       	mov	r2, r18
 49e:	f3 2d       	mov	r31, r3
 4a0:	f0 62       	ori	r31, 0x20	; 32
 4a2:	3f 2e       	mov	r3, r31
 4a4:	08 c0       	rjmp	.+16     	; 0x4b6 <__stack+0x57>
 4a6:	8c 36       	cpi	r24, 0x6C	; 108
 4a8:	21 f4       	brne	.+8      	; 0x4b2 <__stack+0x53>
 4aa:	83 2d       	mov	r24, r3
 4ac:	80 68       	ori	r24, 0x80	; 128
 4ae:	38 2e       	mov	r3, r24
 4b0:	02 c0       	rjmp	.+4      	; 0x4b6 <__stack+0x57>
 4b2:	88 36       	cpi	r24, 0x68	; 104
 4b4:	41 f4       	brne	.+16     	; 0x4c6 <__stack+0x67>
 4b6:	f7 01       	movw	r30, r14
 4b8:	93 fd       	sbrc	r25, 3
 4ba:	85 91       	lpm	r24, Z+
 4bc:	93 ff       	sbrs	r25, 3
 4be:	81 91       	ld	r24, Z+
 4c0:	7f 01       	movw	r14, r30
 4c2:	81 11       	cpse	r24, r1
 4c4:	b3 cf       	rjmp	.-154    	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 4c6:	98 2f       	mov	r25, r24
 4c8:	9f 7d       	andi	r25, 0xDF	; 223
 4ca:	95 54       	subi	r25, 0x45	; 69
 4cc:	93 30       	cpi	r25, 0x03	; 3
 4ce:	28 f4       	brcc	.+10     	; 0x4da <__stack+0x7b>
 4d0:	0c 5f       	subi	r16, 0xFC	; 252
 4d2:	1f 4f       	sbci	r17, 0xFF	; 255
 4d4:	9f e3       	ldi	r25, 0x3F	; 63
 4d6:	99 83       	std	Y+1, r25	; 0x01
 4d8:	0d c0       	rjmp	.+26     	; 0x4f4 <__stack+0x95>
 4da:	83 36       	cpi	r24, 0x63	; 99
 4dc:	31 f0       	breq	.+12     	; 0x4ea <__stack+0x8b>
 4de:	83 37       	cpi	r24, 0x73	; 115
 4e0:	71 f0       	breq	.+28     	; 0x4fe <__stack+0x9f>
 4e2:	83 35       	cpi	r24, 0x53	; 83
 4e4:	09 f0       	breq	.+2      	; 0x4e8 <__stack+0x89>
 4e6:	59 c0       	rjmp	.+178    	; 0x59a <__stack+0x13b>
 4e8:	21 c0       	rjmp	.+66     	; 0x52c <__stack+0xcd>
 4ea:	f8 01       	movw	r30, r16
 4ec:	80 81       	ld	r24, Z
 4ee:	89 83       	std	Y+1, r24	; 0x01
 4f0:	0e 5f       	subi	r16, 0xFE	; 254
 4f2:	1f 4f       	sbci	r17, 0xFF	; 255
 4f4:	88 24       	eor	r8, r8
 4f6:	83 94       	inc	r8
 4f8:	91 2c       	mov	r9, r1
 4fa:	53 01       	movw	r10, r6
 4fc:	13 c0       	rjmp	.+38     	; 0x524 <__stack+0xc5>
 4fe:	28 01       	movw	r4, r16
 500:	f2 e0       	ldi	r31, 0x02	; 2
 502:	4f 0e       	add	r4, r31
 504:	51 1c       	adc	r5, r1
 506:	f8 01       	movw	r30, r16
 508:	a0 80       	ld	r10, Z
 50a:	b1 80       	ldd	r11, Z+1	; 0x01
 50c:	36 fe       	sbrs	r3, 6
 50e:	03 c0       	rjmp	.+6      	; 0x516 <__stack+0xb7>
 510:	69 2d       	mov	r22, r9
 512:	70 e0       	ldi	r23, 0x00	; 0
 514:	02 c0       	rjmp	.+4      	; 0x51a <__stack+0xbb>
 516:	6f ef       	ldi	r22, 0xFF	; 255
 518:	7f ef       	ldi	r23, 0xFF	; 255
 51a:	c5 01       	movw	r24, r10
 51c:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <strnlen>
 520:	4c 01       	movw	r8, r24
 522:	82 01       	movw	r16, r4
 524:	f3 2d       	mov	r31, r3
 526:	ff 77       	andi	r31, 0x7F	; 127
 528:	3f 2e       	mov	r3, r31
 52a:	16 c0       	rjmp	.+44     	; 0x558 <__stack+0xf9>
 52c:	28 01       	movw	r4, r16
 52e:	22 e0       	ldi	r18, 0x02	; 2
 530:	42 0e       	add	r4, r18
 532:	51 1c       	adc	r5, r1
 534:	f8 01       	movw	r30, r16
 536:	a0 80       	ld	r10, Z
 538:	b1 80       	ldd	r11, Z+1	; 0x01
 53a:	36 fe       	sbrs	r3, 6
 53c:	03 c0       	rjmp	.+6      	; 0x544 <__stack+0xe5>
 53e:	69 2d       	mov	r22, r9
 540:	70 e0       	ldi	r23, 0x00	; 0
 542:	02 c0       	rjmp	.+4      	; 0x548 <__stack+0xe9>
 544:	6f ef       	ldi	r22, 0xFF	; 255
 546:	7f ef       	ldi	r23, 0xFF	; 255
 548:	c5 01       	movw	r24, r10
 54a:	0e 94 c9 03 	call	0x792	; 0x792 <strnlen_P>
 54e:	4c 01       	movw	r8, r24
 550:	f3 2d       	mov	r31, r3
 552:	f0 68       	ori	r31, 0x80	; 128
 554:	3f 2e       	mov	r3, r31
 556:	82 01       	movw	r16, r4
 558:	33 fc       	sbrc	r3, 3
 55a:	1b c0       	rjmp	.+54     	; 0x592 <__stack+0x133>
 55c:	82 2d       	mov	r24, r2
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	88 16       	cp	r8, r24
 562:	99 06       	cpc	r9, r25
 564:	b0 f4       	brcc	.+44     	; 0x592 <__stack+0x133>
 566:	b6 01       	movw	r22, r12
 568:	80 e2       	ldi	r24, 0x20	; 32
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 570:	2a 94       	dec	r2
 572:	f4 cf       	rjmp	.-24     	; 0x55c <__stack+0xfd>
 574:	f5 01       	movw	r30, r10
 576:	37 fc       	sbrc	r3, 7
 578:	85 91       	lpm	r24, Z+
 57a:	37 fe       	sbrs	r3, 7
 57c:	81 91       	ld	r24, Z+
 57e:	5f 01       	movw	r10, r30
 580:	b6 01       	movw	r22, r12
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 588:	21 10       	cpse	r2, r1
 58a:	2a 94       	dec	r2
 58c:	21 e0       	ldi	r18, 0x01	; 1
 58e:	82 1a       	sub	r8, r18
 590:	91 08       	sbc	r9, r1
 592:	81 14       	cp	r8, r1
 594:	91 04       	cpc	r9, r1
 596:	71 f7       	brne	.-36     	; 0x574 <__stack+0x115>
 598:	e8 c0       	rjmp	.+464    	; 0x76a <__stack+0x30b>
 59a:	84 36       	cpi	r24, 0x64	; 100
 59c:	11 f0       	breq	.+4      	; 0x5a2 <__stack+0x143>
 59e:	89 36       	cpi	r24, 0x69	; 105
 5a0:	41 f5       	brne	.+80     	; 0x5f2 <__stack+0x193>
 5a2:	f8 01       	movw	r30, r16
 5a4:	37 fe       	sbrs	r3, 7
 5a6:	07 c0       	rjmp	.+14     	; 0x5b6 <__stack+0x157>
 5a8:	60 81       	ld	r22, Z
 5aa:	71 81       	ldd	r23, Z+1	; 0x01
 5ac:	82 81       	ldd	r24, Z+2	; 0x02
 5ae:	93 81       	ldd	r25, Z+3	; 0x03
 5b0:	0c 5f       	subi	r16, 0xFC	; 252
 5b2:	1f 4f       	sbci	r17, 0xFF	; 255
 5b4:	08 c0       	rjmp	.+16     	; 0x5c6 <__stack+0x167>
 5b6:	60 81       	ld	r22, Z
 5b8:	71 81       	ldd	r23, Z+1	; 0x01
 5ba:	07 2e       	mov	r0, r23
 5bc:	00 0c       	add	r0, r0
 5be:	88 0b       	sbc	r24, r24
 5c0:	99 0b       	sbc	r25, r25
 5c2:	0e 5f       	subi	r16, 0xFE	; 254
 5c4:	1f 4f       	sbci	r17, 0xFF	; 255
 5c6:	f3 2d       	mov	r31, r3
 5c8:	ff 76       	andi	r31, 0x6F	; 111
 5ca:	3f 2e       	mov	r3, r31
 5cc:	97 ff       	sbrs	r25, 7
 5ce:	09 c0       	rjmp	.+18     	; 0x5e2 <__stack+0x183>
 5d0:	90 95       	com	r25
 5d2:	80 95       	com	r24
 5d4:	70 95       	com	r23
 5d6:	61 95       	neg	r22
 5d8:	7f 4f       	sbci	r23, 0xFF	; 255
 5da:	8f 4f       	sbci	r24, 0xFF	; 255
 5dc:	9f 4f       	sbci	r25, 0xFF	; 255
 5de:	f0 68       	ori	r31, 0x80	; 128
 5e0:	3f 2e       	mov	r3, r31
 5e2:	2a e0       	ldi	r18, 0x0A	; 10
 5e4:	30 e0       	ldi	r19, 0x00	; 0
 5e6:	a3 01       	movw	r20, r6
 5e8:	0e 94 1b 04 	call	0x836	; 0x836 <__ultoa_invert>
 5ec:	88 2e       	mov	r8, r24
 5ee:	86 18       	sub	r8, r6
 5f0:	45 c0       	rjmp	.+138    	; 0x67c <__stack+0x21d>
 5f2:	85 37       	cpi	r24, 0x75	; 117
 5f4:	31 f4       	brne	.+12     	; 0x602 <__stack+0x1a3>
 5f6:	23 2d       	mov	r18, r3
 5f8:	2f 7e       	andi	r18, 0xEF	; 239
 5fa:	b2 2e       	mov	r11, r18
 5fc:	2a e0       	ldi	r18, 0x0A	; 10
 5fe:	30 e0       	ldi	r19, 0x00	; 0
 600:	25 c0       	rjmp	.+74     	; 0x64c <__stack+0x1ed>
 602:	93 2d       	mov	r25, r3
 604:	99 7f       	andi	r25, 0xF9	; 249
 606:	b9 2e       	mov	r11, r25
 608:	8f 36       	cpi	r24, 0x6F	; 111
 60a:	c1 f0       	breq	.+48     	; 0x63c <__stack+0x1dd>
 60c:	18 f4       	brcc	.+6      	; 0x614 <__stack+0x1b5>
 60e:	88 35       	cpi	r24, 0x58	; 88
 610:	79 f0       	breq	.+30     	; 0x630 <__stack+0x1d1>
 612:	b5 c0       	rjmp	.+362    	; 0x77e <__stack+0x31f>
 614:	80 37       	cpi	r24, 0x70	; 112
 616:	19 f0       	breq	.+6      	; 0x61e <__stack+0x1bf>
 618:	88 37       	cpi	r24, 0x78	; 120
 61a:	21 f0       	breq	.+8      	; 0x624 <__stack+0x1c5>
 61c:	b0 c0       	rjmp	.+352    	; 0x77e <__stack+0x31f>
 61e:	e9 2f       	mov	r30, r25
 620:	e0 61       	ori	r30, 0x10	; 16
 622:	be 2e       	mov	r11, r30
 624:	b4 fe       	sbrs	r11, 4
 626:	0d c0       	rjmp	.+26     	; 0x642 <__stack+0x1e3>
 628:	fb 2d       	mov	r31, r11
 62a:	f4 60       	ori	r31, 0x04	; 4
 62c:	bf 2e       	mov	r11, r31
 62e:	09 c0       	rjmp	.+18     	; 0x642 <__stack+0x1e3>
 630:	34 fe       	sbrs	r3, 4
 632:	0a c0       	rjmp	.+20     	; 0x648 <__stack+0x1e9>
 634:	29 2f       	mov	r18, r25
 636:	26 60       	ori	r18, 0x06	; 6
 638:	b2 2e       	mov	r11, r18
 63a:	06 c0       	rjmp	.+12     	; 0x648 <__stack+0x1e9>
 63c:	28 e0       	ldi	r18, 0x08	; 8
 63e:	30 e0       	ldi	r19, 0x00	; 0
 640:	05 c0       	rjmp	.+10     	; 0x64c <__stack+0x1ed>
 642:	20 e1       	ldi	r18, 0x10	; 16
 644:	30 e0       	ldi	r19, 0x00	; 0
 646:	02 c0       	rjmp	.+4      	; 0x64c <__stack+0x1ed>
 648:	20 e1       	ldi	r18, 0x10	; 16
 64a:	32 e0       	ldi	r19, 0x02	; 2
 64c:	f8 01       	movw	r30, r16
 64e:	b7 fe       	sbrs	r11, 7
 650:	07 c0       	rjmp	.+14     	; 0x660 <__stack+0x201>
 652:	60 81       	ld	r22, Z
 654:	71 81       	ldd	r23, Z+1	; 0x01
 656:	82 81       	ldd	r24, Z+2	; 0x02
 658:	93 81       	ldd	r25, Z+3	; 0x03
 65a:	0c 5f       	subi	r16, 0xFC	; 252
 65c:	1f 4f       	sbci	r17, 0xFF	; 255
 65e:	06 c0       	rjmp	.+12     	; 0x66c <__stack+0x20d>
 660:	60 81       	ld	r22, Z
 662:	71 81       	ldd	r23, Z+1	; 0x01
 664:	80 e0       	ldi	r24, 0x00	; 0
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	0e 5f       	subi	r16, 0xFE	; 254
 66a:	1f 4f       	sbci	r17, 0xFF	; 255
 66c:	a3 01       	movw	r20, r6
 66e:	0e 94 1b 04 	call	0x836	; 0x836 <__ultoa_invert>
 672:	88 2e       	mov	r8, r24
 674:	86 18       	sub	r8, r6
 676:	fb 2d       	mov	r31, r11
 678:	ff 77       	andi	r31, 0x7F	; 127
 67a:	3f 2e       	mov	r3, r31
 67c:	36 fe       	sbrs	r3, 6
 67e:	0d c0       	rjmp	.+26     	; 0x69a <__stack+0x23b>
 680:	23 2d       	mov	r18, r3
 682:	2e 7f       	andi	r18, 0xFE	; 254
 684:	a2 2e       	mov	r10, r18
 686:	89 14       	cp	r8, r9
 688:	58 f4       	brcc	.+22     	; 0x6a0 <__stack+0x241>
 68a:	34 fe       	sbrs	r3, 4
 68c:	0b c0       	rjmp	.+22     	; 0x6a4 <__stack+0x245>
 68e:	32 fc       	sbrc	r3, 2
 690:	09 c0       	rjmp	.+18     	; 0x6a4 <__stack+0x245>
 692:	83 2d       	mov	r24, r3
 694:	8e 7e       	andi	r24, 0xEE	; 238
 696:	a8 2e       	mov	r10, r24
 698:	05 c0       	rjmp	.+10     	; 0x6a4 <__stack+0x245>
 69a:	b8 2c       	mov	r11, r8
 69c:	a3 2c       	mov	r10, r3
 69e:	03 c0       	rjmp	.+6      	; 0x6a6 <__stack+0x247>
 6a0:	b8 2c       	mov	r11, r8
 6a2:	01 c0       	rjmp	.+2      	; 0x6a6 <__stack+0x247>
 6a4:	b9 2c       	mov	r11, r9
 6a6:	a4 fe       	sbrs	r10, 4
 6a8:	0f c0       	rjmp	.+30     	; 0x6c8 <__stack+0x269>
 6aa:	fe 01       	movw	r30, r28
 6ac:	e8 0d       	add	r30, r8
 6ae:	f1 1d       	adc	r31, r1
 6b0:	80 81       	ld	r24, Z
 6b2:	80 33       	cpi	r24, 0x30	; 48
 6b4:	21 f4       	brne	.+8      	; 0x6be <__stack+0x25f>
 6b6:	9a 2d       	mov	r25, r10
 6b8:	99 7e       	andi	r25, 0xE9	; 233
 6ba:	a9 2e       	mov	r10, r25
 6bc:	09 c0       	rjmp	.+18     	; 0x6d0 <__stack+0x271>
 6be:	a2 fe       	sbrs	r10, 2
 6c0:	06 c0       	rjmp	.+12     	; 0x6ce <__stack+0x26f>
 6c2:	b3 94       	inc	r11
 6c4:	b3 94       	inc	r11
 6c6:	04 c0       	rjmp	.+8      	; 0x6d0 <__stack+0x271>
 6c8:	8a 2d       	mov	r24, r10
 6ca:	86 78       	andi	r24, 0x86	; 134
 6cc:	09 f0       	breq	.+2      	; 0x6d0 <__stack+0x271>
 6ce:	b3 94       	inc	r11
 6d0:	a3 fc       	sbrc	r10, 3
 6d2:	11 c0       	rjmp	.+34     	; 0x6f6 <__stack+0x297>
 6d4:	a0 fe       	sbrs	r10, 0
 6d6:	06 c0       	rjmp	.+12     	; 0x6e4 <__stack+0x285>
 6d8:	b2 14       	cp	r11, r2
 6da:	88 f4       	brcc	.+34     	; 0x6fe <__stack+0x29f>
 6dc:	28 0c       	add	r2, r8
 6de:	92 2c       	mov	r9, r2
 6e0:	9b 18       	sub	r9, r11
 6e2:	0e c0       	rjmp	.+28     	; 0x700 <__stack+0x2a1>
 6e4:	b2 14       	cp	r11, r2
 6e6:	60 f4       	brcc	.+24     	; 0x700 <__stack+0x2a1>
 6e8:	b6 01       	movw	r22, r12
 6ea:	80 e2       	ldi	r24, 0x20	; 32
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 6f2:	b3 94       	inc	r11
 6f4:	f7 cf       	rjmp	.-18     	; 0x6e4 <__stack+0x285>
 6f6:	b2 14       	cp	r11, r2
 6f8:	18 f4       	brcc	.+6      	; 0x700 <__stack+0x2a1>
 6fa:	2b 18       	sub	r2, r11
 6fc:	02 c0       	rjmp	.+4      	; 0x702 <__stack+0x2a3>
 6fe:	98 2c       	mov	r9, r8
 700:	21 2c       	mov	r2, r1
 702:	a4 fe       	sbrs	r10, 4
 704:	10 c0       	rjmp	.+32     	; 0x726 <__stack+0x2c7>
 706:	b6 01       	movw	r22, r12
 708:	80 e3       	ldi	r24, 0x30	; 48
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 710:	a2 fe       	sbrs	r10, 2
 712:	17 c0       	rjmp	.+46     	; 0x742 <__stack+0x2e3>
 714:	a1 fc       	sbrc	r10, 1
 716:	03 c0       	rjmp	.+6      	; 0x71e <__stack+0x2bf>
 718:	88 e7       	ldi	r24, 0x78	; 120
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	02 c0       	rjmp	.+4      	; 0x722 <__stack+0x2c3>
 71e:	88 e5       	ldi	r24, 0x58	; 88
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	b6 01       	movw	r22, r12
 724:	0c c0       	rjmp	.+24     	; 0x73e <__stack+0x2df>
 726:	8a 2d       	mov	r24, r10
 728:	86 78       	andi	r24, 0x86	; 134
 72a:	59 f0       	breq	.+22     	; 0x742 <__stack+0x2e3>
 72c:	a1 fe       	sbrs	r10, 1
 72e:	02 c0       	rjmp	.+4      	; 0x734 <__stack+0x2d5>
 730:	8b e2       	ldi	r24, 0x2B	; 43
 732:	01 c0       	rjmp	.+2      	; 0x736 <__stack+0x2d7>
 734:	80 e2       	ldi	r24, 0x20	; 32
 736:	a7 fc       	sbrc	r10, 7
 738:	8d e2       	ldi	r24, 0x2D	; 45
 73a:	b6 01       	movw	r22, r12
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 742:	89 14       	cp	r8, r9
 744:	38 f4       	brcc	.+14     	; 0x754 <__stack+0x2f5>
 746:	b6 01       	movw	r22, r12
 748:	80 e3       	ldi	r24, 0x30	; 48
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 750:	9a 94       	dec	r9
 752:	f7 cf       	rjmp	.-18     	; 0x742 <__stack+0x2e3>
 754:	8a 94       	dec	r8
 756:	f3 01       	movw	r30, r6
 758:	e8 0d       	add	r30, r8
 75a:	f1 1d       	adc	r31, r1
 75c:	80 81       	ld	r24, Z
 75e:	b6 01       	movw	r22, r12
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 766:	81 10       	cpse	r8, r1
 768:	f5 cf       	rjmp	.-22     	; 0x754 <__stack+0x2f5>
 76a:	22 20       	and	r2, r2
 76c:	09 f4       	brne	.+2      	; 0x770 <__stack+0x311>
 76e:	42 ce       	rjmp	.-892    	; 0x3f4 <vfprintf+0x24>
 770:	b6 01       	movw	r22, r12
 772:	80 e2       	ldi	r24, 0x20	; 32
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 77a:	2a 94       	dec	r2
 77c:	f6 cf       	rjmp	.-20     	; 0x76a <__stack+0x30b>
 77e:	f6 01       	movw	r30, r12
 780:	86 81       	ldd	r24, Z+6	; 0x06
 782:	97 81       	ldd	r25, Z+7	; 0x07
 784:	02 c0       	rjmp	.+4      	; 0x78a <__stack+0x32b>
 786:	8f ef       	ldi	r24, 0xFF	; 255
 788:	9f ef       	ldi	r25, 0xFF	; 255
 78a:	2b 96       	adiw	r28, 0x0b	; 11
 78c:	e2 e1       	ldi	r30, 0x12	; 18
 78e:	0c 94 95 04 	jmp	0x92a	; 0x92a <__epilogue_restores__>

00000792 <strnlen_P>:
 792:	fc 01       	movw	r30, r24
 794:	05 90       	lpm	r0, Z+
 796:	61 50       	subi	r22, 0x01	; 1
 798:	70 40       	sbci	r23, 0x00	; 0
 79a:	01 10       	cpse	r0, r1
 79c:	d8 f7       	brcc	.-10     	; 0x794 <strnlen_P+0x2>
 79e:	80 95       	com	r24
 7a0:	90 95       	com	r25
 7a2:	8e 0f       	add	r24, r30
 7a4:	9f 1f       	adc	r25, r31
 7a6:	08 95       	ret

000007a8 <strnlen>:
 7a8:	fc 01       	movw	r30, r24
 7aa:	61 50       	subi	r22, 0x01	; 1
 7ac:	70 40       	sbci	r23, 0x00	; 0
 7ae:	01 90       	ld	r0, Z+
 7b0:	01 10       	cpse	r0, r1
 7b2:	d8 f7       	brcc	.-10     	; 0x7aa <strnlen+0x2>
 7b4:	80 95       	com	r24
 7b6:	90 95       	com	r25
 7b8:	8e 0f       	add	r24, r30
 7ba:	9f 1f       	adc	r25, r31
 7bc:	08 95       	ret

000007be <fputc>:
 7be:	0f 93       	push	r16
 7c0:	1f 93       	push	r17
 7c2:	cf 93       	push	r28
 7c4:	df 93       	push	r29
 7c6:	fb 01       	movw	r30, r22
 7c8:	23 81       	ldd	r18, Z+3	; 0x03
 7ca:	21 fd       	sbrc	r18, 1
 7cc:	03 c0       	rjmp	.+6      	; 0x7d4 <fputc+0x16>
 7ce:	8f ef       	ldi	r24, 0xFF	; 255
 7d0:	9f ef       	ldi	r25, 0xFF	; 255
 7d2:	2c c0       	rjmp	.+88     	; 0x82c <fputc+0x6e>
 7d4:	22 ff       	sbrs	r18, 2
 7d6:	16 c0       	rjmp	.+44     	; 0x804 <fputc+0x46>
 7d8:	46 81       	ldd	r20, Z+6	; 0x06
 7da:	57 81       	ldd	r21, Z+7	; 0x07
 7dc:	24 81       	ldd	r18, Z+4	; 0x04
 7de:	35 81       	ldd	r19, Z+5	; 0x05
 7e0:	42 17       	cp	r20, r18
 7e2:	53 07       	cpc	r21, r19
 7e4:	44 f4       	brge	.+16     	; 0x7f6 <fputc+0x38>
 7e6:	a0 81       	ld	r26, Z
 7e8:	b1 81       	ldd	r27, Z+1	; 0x01
 7ea:	9d 01       	movw	r18, r26
 7ec:	2f 5f       	subi	r18, 0xFF	; 255
 7ee:	3f 4f       	sbci	r19, 0xFF	; 255
 7f0:	31 83       	std	Z+1, r19	; 0x01
 7f2:	20 83       	st	Z, r18
 7f4:	8c 93       	st	X, r24
 7f6:	26 81       	ldd	r18, Z+6	; 0x06
 7f8:	37 81       	ldd	r19, Z+7	; 0x07
 7fa:	2f 5f       	subi	r18, 0xFF	; 255
 7fc:	3f 4f       	sbci	r19, 0xFF	; 255
 7fe:	37 83       	std	Z+7, r19	; 0x07
 800:	26 83       	std	Z+6, r18	; 0x06
 802:	14 c0       	rjmp	.+40     	; 0x82c <fputc+0x6e>
 804:	8b 01       	movw	r16, r22
 806:	ec 01       	movw	r28, r24
 808:	fb 01       	movw	r30, r22
 80a:	00 84       	ldd	r0, Z+8	; 0x08
 80c:	f1 85       	ldd	r31, Z+9	; 0x09
 80e:	e0 2d       	mov	r30, r0
 810:	09 95       	icall
 812:	89 2b       	or	r24, r25
 814:	e1 f6       	brne	.-72     	; 0x7ce <fputc+0x10>
 816:	d8 01       	movw	r26, r16
 818:	16 96       	adiw	r26, 0x06	; 6
 81a:	8d 91       	ld	r24, X+
 81c:	9c 91       	ld	r25, X
 81e:	17 97       	sbiw	r26, 0x07	; 7
 820:	01 96       	adiw	r24, 0x01	; 1
 822:	17 96       	adiw	r26, 0x07	; 7
 824:	9c 93       	st	X, r25
 826:	8e 93       	st	-X, r24
 828:	16 97       	sbiw	r26, 0x06	; 6
 82a:	ce 01       	movw	r24, r28
 82c:	df 91       	pop	r29
 82e:	cf 91       	pop	r28
 830:	1f 91       	pop	r17
 832:	0f 91       	pop	r16
 834:	08 95       	ret

00000836 <__ultoa_invert>:
 836:	fa 01       	movw	r30, r20
 838:	aa 27       	eor	r26, r26
 83a:	28 30       	cpi	r18, 0x08	; 8
 83c:	51 f1       	breq	.+84     	; 0x892 <__ultoa_invert+0x5c>
 83e:	20 31       	cpi	r18, 0x10	; 16
 840:	81 f1       	breq	.+96     	; 0x8a2 <__ultoa_invert+0x6c>
 842:	e8 94       	clt
 844:	6f 93       	push	r22
 846:	6e 7f       	andi	r22, 0xFE	; 254
 848:	6e 5f       	subi	r22, 0xFE	; 254
 84a:	7f 4f       	sbci	r23, 0xFF	; 255
 84c:	8f 4f       	sbci	r24, 0xFF	; 255
 84e:	9f 4f       	sbci	r25, 0xFF	; 255
 850:	af 4f       	sbci	r26, 0xFF	; 255
 852:	b1 e0       	ldi	r27, 0x01	; 1
 854:	3e d0       	rcall	.+124    	; 0x8d2 <__ultoa_invert+0x9c>
 856:	b4 e0       	ldi	r27, 0x04	; 4
 858:	3c d0       	rcall	.+120    	; 0x8d2 <__ultoa_invert+0x9c>
 85a:	67 0f       	add	r22, r23
 85c:	78 1f       	adc	r23, r24
 85e:	89 1f       	adc	r24, r25
 860:	9a 1f       	adc	r25, r26
 862:	a1 1d       	adc	r26, r1
 864:	68 0f       	add	r22, r24
 866:	79 1f       	adc	r23, r25
 868:	8a 1f       	adc	r24, r26
 86a:	91 1d       	adc	r25, r1
 86c:	a1 1d       	adc	r26, r1
 86e:	6a 0f       	add	r22, r26
 870:	71 1d       	adc	r23, r1
 872:	81 1d       	adc	r24, r1
 874:	91 1d       	adc	r25, r1
 876:	a1 1d       	adc	r26, r1
 878:	20 d0       	rcall	.+64     	; 0x8ba <__ultoa_invert+0x84>
 87a:	09 f4       	brne	.+2      	; 0x87e <__ultoa_invert+0x48>
 87c:	68 94       	set
 87e:	3f 91       	pop	r19
 880:	2a e0       	ldi	r18, 0x0A	; 10
 882:	26 9f       	mul	r18, r22
 884:	11 24       	eor	r1, r1
 886:	30 19       	sub	r19, r0
 888:	30 5d       	subi	r19, 0xD0	; 208
 88a:	31 93       	st	Z+, r19
 88c:	de f6       	brtc	.-74     	; 0x844 <__ultoa_invert+0xe>
 88e:	cf 01       	movw	r24, r30
 890:	08 95       	ret
 892:	46 2f       	mov	r20, r22
 894:	47 70       	andi	r20, 0x07	; 7
 896:	40 5d       	subi	r20, 0xD0	; 208
 898:	41 93       	st	Z+, r20
 89a:	b3 e0       	ldi	r27, 0x03	; 3
 89c:	0f d0       	rcall	.+30     	; 0x8bc <__ultoa_invert+0x86>
 89e:	c9 f7       	brne	.-14     	; 0x892 <__ultoa_invert+0x5c>
 8a0:	f6 cf       	rjmp	.-20     	; 0x88e <__ultoa_invert+0x58>
 8a2:	46 2f       	mov	r20, r22
 8a4:	4f 70       	andi	r20, 0x0F	; 15
 8a6:	40 5d       	subi	r20, 0xD0	; 208
 8a8:	4a 33       	cpi	r20, 0x3A	; 58
 8aa:	18 f0       	brcs	.+6      	; 0x8b2 <__ultoa_invert+0x7c>
 8ac:	49 5d       	subi	r20, 0xD9	; 217
 8ae:	31 fd       	sbrc	r19, 1
 8b0:	40 52       	subi	r20, 0x20	; 32
 8b2:	41 93       	st	Z+, r20
 8b4:	02 d0       	rcall	.+4      	; 0x8ba <__ultoa_invert+0x84>
 8b6:	a9 f7       	brne	.-22     	; 0x8a2 <__ultoa_invert+0x6c>
 8b8:	ea cf       	rjmp	.-44     	; 0x88e <__ultoa_invert+0x58>
 8ba:	b4 e0       	ldi	r27, 0x04	; 4
 8bc:	a6 95       	lsr	r26
 8be:	97 95       	ror	r25
 8c0:	87 95       	ror	r24
 8c2:	77 95       	ror	r23
 8c4:	67 95       	ror	r22
 8c6:	ba 95       	dec	r27
 8c8:	c9 f7       	brne	.-14     	; 0x8bc <__ultoa_invert+0x86>
 8ca:	00 97       	sbiw	r24, 0x00	; 0
 8cc:	61 05       	cpc	r22, r1
 8ce:	71 05       	cpc	r23, r1
 8d0:	08 95       	ret
 8d2:	9b 01       	movw	r18, r22
 8d4:	ac 01       	movw	r20, r24
 8d6:	0a 2e       	mov	r0, r26
 8d8:	06 94       	lsr	r0
 8da:	57 95       	ror	r21
 8dc:	47 95       	ror	r20
 8de:	37 95       	ror	r19
 8e0:	27 95       	ror	r18
 8e2:	ba 95       	dec	r27
 8e4:	c9 f7       	brne	.-14     	; 0x8d8 <__ultoa_invert+0xa2>
 8e6:	62 0f       	add	r22, r18
 8e8:	73 1f       	adc	r23, r19
 8ea:	84 1f       	adc	r24, r20
 8ec:	95 1f       	adc	r25, r21
 8ee:	a0 1d       	adc	r26, r0
 8f0:	08 95       	ret

000008f2 <__prologue_saves__>:
 8f2:	2f 92       	push	r2
 8f4:	3f 92       	push	r3
 8f6:	4f 92       	push	r4
 8f8:	5f 92       	push	r5
 8fa:	6f 92       	push	r6
 8fc:	7f 92       	push	r7
 8fe:	8f 92       	push	r8
 900:	9f 92       	push	r9
 902:	af 92       	push	r10
 904:	bf 92       	push	r11
 906:	cf 92       	push	r12
 908:	df 92       	push	r13
 90a:	ef 92       	push	r14
 90c:	ff 92       	push	r15
 90e:	0f 93       	push	r16
 910:	1f 93       	push	r17
 912:	cf 93       	push	r28
 914:	df 93       	push	r29
 916:	cd b7       	in	r28, 0x3d	; 61
 918:	de b7       	in	r29, 0x3e	; 62
 91a:	ca 1b       	sub	r28, r26
 91c:	db 0b       	sbc	r29, r27
 91e:	0f b6       	in	r0, 0x3f	; 63
 920:	f8 94       	cli
 922:	de bf       	out	0x3e, r29	; 62
 924:	0f be       	out	0x3f, r0	; 63
 926:	cd bf       	out	0x3d, r28	; 61
 928:	09 94       	ijmp

0000092a <__epilogue_restores__>:
 92a:	2a 88       	ldd	r2, Y+18	; 0x12
 92c:	39 88       	ldd	r3, Y+17	; 0x11
 92e:	48 88       	ldd	r4, Y+16	; 0x10
 930:	5f 84       	ldd	r5, Y+15	; 0x0f
 932:	6e 84       	ldd	r6, Y+14	; 0x0e
 934:	7d 84       	ldd	r7, Y+13	; 0x0d
 936:	8c 84       	ldd	r8, Y+12	; 0x0c
 938:	9b 84       	ldd	r9, Y+11	; 0x0b
 93a:	aa 84       	ldd	r10, Y+10	; 0x0a
 93c:	b9 84       	ldd	r11, Y+9	; 0x09
 93e:	c8 84       	ldd	r12, Y+8	; 0x08
 940:	df 80       	ldd	r13, Y+7	; 0x07
 942:	ee 80       	ldd	r14, Y+6	; 0x06
 944:	fd 80       	ldd	r15, Y+5	; 0x05
 946:	0c 81       	ldd	r16, Y+4	; 0x04
 948:	1b 81       	ldd	r17, Y+3	; 0x03
 94a:	aa 81       	ldd	r26, Y+2	; 0x02
 94c:	b9 81       	ldd	r27, Y+1	; 0x01
 94e:	ce 0f       	add	r28, r30
 950:	d1 1d       	adc	r29, r1
 952:	0f b6       	in	r0, 0x3f	; 63
 954:	f8 94       	cli
 956:	de bf       	out	0x3e, r29	; 62
 958:	0f be       	out	0x3f, r0	; 63
 95a:	cd bf       	out	0x3d, r28	; 61
 95c:	ed 01       	movw	r28, r26
 95e:	08 95       	ret

00000960 <_exit>:
 960:	f8 94       	cli

00000962 <__stop_program>:
 962:	ff cf       	rjmp	.-2      	; 0x962 <__stop_program>
